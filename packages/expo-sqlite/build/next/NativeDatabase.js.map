{"version":3,"file":"NativeDatabase.js","sourceRoot":"","sources":["../../src/next/NativeDatabase.ts"],"names":[],"mappings":"","sourcesContent":["import { NativeStatement } from './NativeStatement';\n\n/**\n * A class that represents an instance of the SQLite database.\n */\nexport declare class NativeDatabase {\n  constructor(dbName: string, options?: OpenOptions);\n\n  public initAsync(): Promise<void>;\n  public isInTransaction(): boolean;\n  public isInTransactionAsync(): Promise<boolean>;\n  public closeAsync(): Promise<void>;\n  public execAsync(source: string): Promise<void>;\n  public prepareAsync(nativeStatement: NativeStatement, source: string): Promise<NativeStatement>;\n}\n\n/**\n * Options for opening a database.\n */\nexport interface OpenOptions {\n  /**\n   * Whether to enable the CR-SQLite extension.\n   * @default false\n   */\n  enableCRSQLite?: boolean;\n\n  /**\n   * Whether to call the `sqlite3_update_hook` function and enable the `onDatabaseChange` events.\n   * @default false\n   */\n  enableChangeListener?: boolean;\n}\n"]}